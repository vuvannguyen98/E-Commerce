@page
@model eCommerce.Pages.Panel.OrdersModel

@{
    ViewData["Title"] = "Đơn đặt hàng";
}
<div class="contenti">
    <div class="col-md-12">
        <h4>Đơn đặt hàng</h4>
        <hr />
        <div class="form-group">
            <input style="width: 250px !important;" id="search" type="text" class="form-control" placeholder="Tìm kiếm..." />
        </div>
        <table id="ordersTable" class="table table-striped table-condensed">
            <thead>
                <tr>
                    <th>Mã Sản Phẩm</th>
                    <th>Trạng thái</th>
                    <th>Ngày đặt</th>
                    <th>Tổng tiền</th>
                    <th>Tên khách hàng</th>
                    <th>Email khách hàng</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="ordersTableBody"></tbody>
        </table>
        <div class="text-center paginationRow">
            <ul id="pagination" class="pagination-sm pagination"></ul>
        </div>
    </div>
    <hr />

    <div class="col-md-12" style="margin-top: 20px;">
        <h4>Quy trình</h4>
        <hr />
        <div class="form-group">
            <input style="width: 250px !important;" id="processingSearch" type="text" class="form-control" placeholder="Search..." />
        </div>
        <table id="processingOrdersTable" class="table table-striped table-condensed">
            <thead>
                <tr>
                    <th>Mã Sản Phẩm</th>
                    <th>Trạng thái</th>
                    <th>Ngày đặt</th>
                    <th>Tổng tiền</th>
                    <th>Tên khách hàng</th>
                    <th>Email khách hàng</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="processingOrdersTableBody"></tbody>
        </table>
        <div class="text-center paginationRow">
            <ul id="processingPagination" class="pagination-sm pagination"></ul>
        </div>
    </div>
    <hr />

    <div class="col-md-12" style="margin-top: 20px;">
        <h4>Shipped</h4>
        <hr />
        <div class="form-group">
            <input style="width: 250px !important;" id="shippedSearch" type="text" class="form-control" placeholder="Search..." />
        </div>
        <table id="shippedOrdersTable" class="table table-striped table-condensed">
            <thead>
                <tr>
                    <th>Mã Sản Phẩm</th>
                    <th>Trạng thái</th>
                    <th>Ngày đặt</th>
                    <th>Tổng tiền</th>
                    <th>Tên khách hàng</th>
                    <th>Email khách hàng</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="shippedOrdersTableBody"></tbody>
        </table>
        <div class="text-center paginationRow">
            <ul id="shippedPagination" class="pagination-sm pagination"></ul>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/lib/twbs-pagination/jquery.twbsPagination.min.js"></script>

    <script>
        $(function () {
            var isIntialized = false;
            getOrders(1, false);

            function getOrders(page, isFromPagination) {
                var search = $('#search').val();

                $.ajax({
                    type: 'GET',
                    url: "/Panel/Orders",
                    dataType: "json",
                    data: {
                        search: search,
                        pageNr: page,
                        handler: 'Orders'
                    },
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                            $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    success: function (data) {
                        if (!isIntialized) {
                            $('#pagination').twbsPagination({
                                totalPages: data.totalPages == 0 ? 1 : data.totalPages,
                                visiblePages: 3,
                                onPageClick: function (event, pageNr) {
                                    getOrders(pageNr, true);
                                    return false;
                                }
                            });
                            isIntialized = true;
                        }
                        else if (page == 1 && isFromPagination == false) {
                            $('#pagination').twbsPagination('show', 1);
                        }

                        var html = '';

                        if (data.orders.length) {
                            $.each(data.orders, function (i, item) {
                                html += '<tr>';

                                html += '<td>' + item.id + '</td>';
                                html += '<td>' + item.status + '</td>';
                                html += '<td>' + item.orderedDate + '</td>';
                                html += '<td>' + Number(item.totalPrice).toFixed(0) + 'VNĐ </td>';
                                html += '<td>' + item.usersFullName + '</td>';
                                html += '<td>' + item.usersEmail + '</td>';
                                html += '<td><a href="/Cart/View/' + item.id + '" class="btn btn-primary"><i class="fa fa-eye"></i></a></td>';

                                html += '</tr>';
                            });
                        }
                        else {
                            html += '<tr>';

                            html += '<td class="text-center" colspan="7">There is no order.</td>'

                            html += '</tr>';
                        }

                        $('#ordersTableBody').html(html);
                    }
                });
            }
            $('#search').on('input', function () {
                getOrders(1, false);
            });
        });
    </script>

    <script>
        $(function () {
            var isProcessingIntialized = false;
            getProcessingOrders(1, false);

            function getProcessingOrders(page, isFromPagination) {
                var search = $('#processingSearch').val();

                $.ajax({
                    type: 'GET',
                    url: "/Panel/Orders",
                    dataType: "json",
                    data: {
                        search: search,
                        pageNr: page,
                        handler: 'ProcessingOrders'
                    },
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                            $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    success: function (data) {
                        if (!isProcessingIntialized) {
                            $('#processingPagination').twbsPagination({
                                totalPages: data.totalPages == 0 ? 1 : data.totalPages,
                                visiblePages: 3,
                                onPageClick: function (event, pageNr) {
                                    getProcessingOrders(pageNr, true);
                                    return false;
                                }
                            });
                            isProcessingIntialized = true;
                        }
                        else if (page == 1 && isFromPagination == false) {
                            $('#processingPagination').twbsPagination('show', 1);
                        }

                        var html = '';

                        if (data.orders.length) {
                            $.each(data.orders, function (i, item) {
                                html += '<tr>';

                                html += '<td>' + item.id + '</td>';
                                html += '<td>' + item.status + '</td>';
                                html += '<td>' + item.orderedDate + '</td>';
                                html += '<td>' + Number(item.totalPrice).toFixed(0) + 'VNĐ </td>';
                                html += '<td>' + item.usersFullName + '</td>';
                                html += '<td>' + item.usersEmail + '</td>';
                                html += '<td><a href="/Cart/View/' + item.id + '" class="btn btn-primary"><i class="fa fa-eye"></i></a></td>';

                                html += '</tr>';
                            });
                        }
                        else {
                            html += '<tr>';

                            html += '<td class="text-center" colspan="7">There is no processing order.</td>'

                            html += '</tr>';
                        }

                        $('#processingOrdersTableBody').html(html);
                    }
                });
            }
            $('#processingSearch').on('input', function () {
                getProcessingOrders(1, false);
            });
        });
    </script>

    <script>
        $(function () {
            var isShippedIntialized = false;
            getShippedOrders(1, false);

            function getShippedOrders(page, isFromPagination) {
                var search = $('#shippedSearch').val();

                $.ajax({
                    type: 'GET',
                    url: "/Panel/Orders",
                    dataType: "json",
                    data: {
                        search: search,
                        pageNr: page,
                        handler: 'ShippedOrders'
                    },
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                            $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    success: function (data) {
                        if (!isShippedIntialized) {
                            $('#shippedPagination').twbsPagination({
                                totalPages: data.totalPages == 0 ? 1 : data.totalPages,
                                visiblePages: 3,
                                onPageClick: function (event, pageNr) {
                                    getShippedOrders(pageNr, true);
                                    return false;
                                }
                            });
                            isShippedIntialized = true;
                        }
                        else if (page == 1 && isFromPagination == false) {
                            $('#shippedPagination').twbsPagination('show', 1);
                        }

                        var html = '';

                        if (data.orders.length) {
                            $.each(data.orders, function (i, item) {
                                html += '<tr>';

                                html += '<td>' + item.id + '</td>';
                                html += '<td>' + item.status + '</td>';
                                html += '<td>' + item.orderedDate + '</td>';
                                html += '<td>' + Number(item.totalPrice).toFixed(0) + 'VNĐ </td>';
                                html += '<td>' + item.usersFullName + '</td>';
                                html += '<td>' + item.usersEmail + '</td>';
                                html += '<td><a href="/Cart/View/' + item.id + '" class="btn btn-primary"><i class="fa fa-eye"></i></a></td>';

                                html += '</tr>';
                            });
                        }
                        else {
                            html += '<tr>';

                            html += '<td class="text-center" colspan="7">There is no shipped order.</td>'

                            html += '</tr>';
                        }

                        $('#shippedOrdersTableBody').html(html);
                    }
                });
            }
            $('#shippedSearch').on('input', function () {
                getShippedOrders(1, false);
            });
        });
    </script>
}